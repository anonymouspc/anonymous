ld64.lld: error: undefined symbol: anonymous::detail::opencl_container@anonymous.basic<boost::compute::vector@boost<int, boost::compute::buffer_allocator@boost<int>>>::opencl_container()
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 2, anonymous::opencl@anonymous.basic>::array<int, int>(int, int...) requires sizeof... (fp) == T0+0x30)
>>> did you mean: anonymous::detail::opencl_container@anonymous.basic<boost::compute::vector@boost<int, boost::compute::buffer_allocator@boost<int>>>::~opencl_container()
>>> defined in: bin/debug/main.o

ld64.lld: error: undefined symbol: void anonymous::detail::opencl_container@anonymous.basic<boost::compute::vector@boost<int, boost::compute::buffer_allocator@boost<int>>>::resize<int&>(int&)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 2, anonymous::opencl@anonymous.basic>::set_resize(anonymous::detail::array_shape@anonymous.container<2>)+0x15c)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 2, anonymous::opencl@anonymous.basic>::set_resize(anonymous::detail::array_shape@anonymous.container<2>)+0xd4)

ld64.lld: error: undefined symbol: anonymous::cpu@anonymous.basic::const_stride_pointer<int>& anonymous::operator++@anonymous.basic<int>(anonymous::cpu@anonymous.basic::const_stride_pointer<int>&)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol std::__1::basic_format_context<std::__1::back_insert_iterator<std::__1::__format::__output_buffer<char>>, char>::iterator std::__1::range_formatter<int, char>::__format_as_sequence[abi:ne200100]<anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic> const&, std::__1::basic_format_context<std::__1::back_insert_iterator<std::__1::__format::__output_buffer<char>>, char>>(anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic> const&, std::__1::basic_format_context<std::__1::back_insert_iterator<std::__1::__format::__output_buffer<char>>, char>&) const+0x1b4)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol std::__1::basic_format_context<std::__1::__format::__retarget_buffer<char>::__iterator, char>::iterator std::__1::range_formatter<int, char>::__format_as_sequence[abi:ne200100]<anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic> const&, std::__1::basic_format_context<std::__1::__format::__retarget_buffer<char>::__iterator, char>>(anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic> const&, std::__1::basic_format_context<std::__1::__format::__retarget_buffer<char>::__iterator, char>&) const+0x1b4)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol bool std::__1::__any_of[abi:ne200100]<anonymous::cpu@anonymous.basic::const_stride_pointer<int>, anonymous::cpu@anonymous.basic::const_stride_pointer<int>, std::__1::__identity, anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>::resize(anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic>)::'lambda'(int)>(anonymous::cpu@anonymous.basic::const_stride_pointer<int>, anonymous::cpu@anonymous.basic::const_stride_pointer<int>, anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>::resize(anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic>)::'lambda'(int)&, std::__1::__identity&)+0xa8)
>>> referenced 1 more times

ld64.lld: error: undefined symbol: bool anonymous::operator==@anonymous.basic<int>(anonymous::cpu@anonymous.basic::const_stride_pointer<int>, anonymous::cpu@anonymous.basic::const_stride_pointer<int>)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol std::__1::basic_format_context<std::__1::back_insert_iterator<std::__1::__format::__output_buffer<char>>, char>::iterator std::__1::range_formatter<int, char>::__format_as_sequence[abi:ne200100]<anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic> const&, std::__1::basic_format_context<std::__1::back_insert_iterator<std::__1::__format::__output_buffer<char>>, char>>(anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic> const&, std::__1::basic_format_context<std::__1::back_insert_iterator<std::__1::__format::__output_buffer<char>>, char>&) const+0xf0)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol std::__1::basic_format_context<std::__1::__format::__retarget_buffer<char>::__iterator, char>::iterator std::__1::range_formatter<int, char>::__format_as_sequence[abi:ne200100]<anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic> const&, std::__1::basic_format_context<std::__1::__format::__retarget_buffer<char>::__iterator, char>>(anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic> const&, std::__1::basic_format_context<std::__1::__format::__retarget_buffer<char>::__iterator, char>&) const+0xf0)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol bool std::__1::__any_of[abi:ne200100]<anonymous::cpu@anonymous.basic::const_stride_pointer<int>, anonymous::cpu@anonymous.basic::const_stride_pointer<int>, std::__1::__identity, anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>::resize(anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic>)::'lambda'(int)>(anonymous::cpu@anonymous.basic::const_stride_pointer<int>, anonymous::cpu@anonymous.basic::const_stride_pointer<int>, anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>::resize(anonymous::array@anonymous.container<int, 1, anonymous::cpu@anonymous.basic>)::'lambda'(int)&, std::__1::__identity&)+0x48)
>>> referenced 1 more times

ld64.lld: error: undefined symbol: anonymous::detail::opencl_container@anonymous.basic<boost::compute::vector@boost<int, boost::compute::buffer_allocator@boost<int>>>::data()
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 2, anonymous::opencl@anonymous.basic>::data()+0x44)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 3, anonymous::opencl@anonymous.basic>::data()+0x44)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 4, anonymous::opencl@anonymous.basic>::data()+0x44)

ld64.lld: error: undefined symbol: anonymous::cpu@anonymous.basic::stride_pointer<int>& anonymous::operator++@anonymous.basic<int>(anonymous::cpu@anonymous.basic::stride_pointer<int>&)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol void std::__1::__reverse_impl[abi:ne200100]<std::__1::_ClassicAlgPolicy, anonymous::cpu@anonymous.basic::stride_pointer<int>>(anonymous::cpu@anonymous.basic::stride_pointer<int>, anonymous::cpu@anonymous.basic::stride_pointer<int>, std::__1::random_access_iterator_tag)+0xac)

ld64.lld: error: undefined symbol: std::__1::strong_ordering anonymous::operator<=>@anonymous.basic<int>(anonymous::cpu@anonymous.basic::stride_pointer<int>, anonymous::cpu@anonymous.basic::stride_pointer<int>)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol void std::__1::__reverse_impl[abi:ne200100]<std::__1::_ClassicAlgPolicy, anonymous::cpu@anonymous.basic::stride_pointer<int>>(anonymous::cpu@anonymous.basic::stride_pointer<int>, anonymous::cpu@anonymous.basic::stride_pointer<int>, std::__1::random_access_iterator_tag)+0x74)

ld64.lld: error: undefined symbol: anonymous::cpu@anonymous.basic::stride_pointer<int>& anonymous::operator--@anonymous.basic<int>(anonymous::cpu@anonymous.basic::stride_pointer<int>&)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol void std::__1::__reverse_impl[abi:ne200100]<std::__1::_ClassicAlgPolicy, anonymous::cpu@anonymous.basic::stride_pointer<int>>(anonymous::cpu@anonymous.basic::stride_pointer<int>, anonymous::cpu@anonymous.basic::stride_pointer<int>, std::__1::random_access_iterator_tag)+0x58)

ld64.lld: error: undefined symbol: bool anonymous::operator==@anonymous.basic<int>(anonymous::cpu@anonymous.basic::stride_pointer<int>, anonymous::cpu@anonymous.basic::stride_pointer<int>)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol void std::__1::__reverse_impl[abi:ne200100]<std::__1::_ClassicAlgPolicy, anonymous::cpu@anonymous.basic::stride_pointer<int>>(anonymous::cpu@anonymous.basic::stride_pointer<int>, anonymous::cpu@anonymous.basic::stride_pointer<int>, std::__1::random_access_iterator_tag)+0x3c)

ld64.lld: error: undefined symbol: anonymous::detail::opencl_container@anonymous.basic<boost::compute::vector@boost<int, boost::compute::buffer_allocator@boost<int>>>::size() const
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 1, anonymous::opencl@anonymous.basic>::size() const+0x28)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 1, anonymous::opencl@anonymous.basic>::operator[](int) const+0x13c)

ld64.lld: error: undefined symbol: anonymous::opencl@anonymous.basic::const_reference<int> anonymous::detail::opencl_container@anonymous.basic<boost::compute::vector@boost<int, boost::compute::buffer_allocator@boost<int>>>::operator[]<unsigned long>(unsigned long&&) const
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 1, anonymous::opencl@anonymous.basic>::operator[](int) const+0x15c)

ld64.lld: error: undefined symbol: anonymous::opencl@anonymous.basic::const_reference<int> anonymous::detail::opencl_container@anonymous.basic<boost::compute::vector@boost<int, boost::compute::buffer_allocator@boost<int>>>::operator[]<int>(int&&) const
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 1, anonymous::opencl@anonymous.basic>::operator[](int) const+0x128)

ld64.lld: error: undefined symbol: anonymous::detail::opencl_container@anonymous.basic<boost::compute::vector@boost<int, boost::compute::buffer_allocator@boost<int>>>::data() const
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 2, anonymous::opencl@anonymous.basic>::data() const+0x44)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 3, anonymous::opencl@anonymous.basic>::data() const+0x44)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol anonymous::array@anonymous.container<int, 4, anonymous::opencl@anonymous.basic>::data() const+0x44)
>>> referenced 3 more times

ld64.lld: error: undefined symbol: anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>& anonymous::operator++@anonymous.basic<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol std::__1::pair<anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*> std::__1::__move_impl<std::__1::_ClassicAlgPolicy>::operator()[abi:ne200100]<anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) const+0x74)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> std::__1::__move_impl<std::__1::_ClassicAlgPolicy>::operator()[abi:ne200100]<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>) const+0x6c)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol std::__1::pair<anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> std::__1::__move_impl<std::__1::_ClassicAlgPolicy>::operator()[abi:ne200100]<anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>(anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>) const+0x8c)
>>> referenced 2 more times

ld64.lld: error: undefined symbol: bool anonymous::operator==@anonymous.basic<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol std::__1::pair<anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*> std::__1::__move_impl<std::__1::_ClassicAlgPolicy>::operator()[abi:ne200100]<anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*>(anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) const+0x4c)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol std::__1::pair<anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> std::__1::__move_impl<std::__1::_ClassicAlgPolicy>::operator()[abi:ne200100]<anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>(anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>) const+0x50)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol void anonymous::detail::align_array@anonymous.container<anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>>(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>&)::'lambda'(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>&) std::__1::for_each[abi:ne200100]<anonymous::cpu@anonymous.basic::stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, void anonymous::detail::align_array@anonymous.container<anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>>(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>&)::'lambda'(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>&)>(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>, anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>, void anonymous::detail::align_array@anonymous.container<anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>>(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>&)::'lambda'(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>&))+0x44)

ld64.lld: error: undefined symbol: bool anonymous::operator==@anonymous.basic<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(anonymous::cpu@anonymous.basic::const_stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, anonymous::cpu@anonymous.basic::const_stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol auto std::__1::__max_element[abi:ne200100]<void anonymous::detail::align_array@anonymous.container<anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>>(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>&)::'lambda'(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic> const&, auto const&)&, anonymous::cpu@anonymous.basic::const_stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>(auto, auto, anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>)+0x80)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol auto std::__1::__max_element[abi:ne200100]<void anonymous::detail::align_array@anonymous.container<anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>>(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>&)::'lambda'(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic> const&, auto const&)&, anonymous::cpu@anonymous.basic::const_stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>(auto, auto, anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>)+0x40)

ld64.lld: error: undefined symbol: anonymous::cpu@anonymous.basic::const_stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>& anonymous::operator++@anonymous.basic<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(anonymous::cpu@anonymous.basic::const_stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&)
>>> referenced by /Users/anonymous/Code/anonymous/main.cpp
>>>               bin/debug/main.o:(symbol auto std::__1::__max_element[abi:ne200100]<void anonymous::detail::align_array@anonymous.container<anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>>(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>&)::'lambda'(anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic> const&, auto const&)&, anonymous::cpu@anonymous.basic::const_stride_pointer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>(auto, auto, anonymous::array@anonymous.container<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, 2, anonymous::cpu@anonymous.basic>)+0x5c)
clang++: [0;1;31merror: [0m[1mlinker command failed with exit code 1 (use -v to see invocation)[0m
